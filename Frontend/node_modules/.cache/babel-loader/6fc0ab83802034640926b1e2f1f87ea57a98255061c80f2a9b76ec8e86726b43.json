{"ast":null,"code":"var _jsxFileName = \"B:\\\\story-generator\\\\Frontend\\\\src\\\\components\\\\PromptForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptForm() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [generatedStory, setGeneratedStory] = useState('');\n  const handlePromptChange = e => {\n    setPrompt(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const handleSubmit = async e => {\n      e.preventDefault();\n      console.log('Submit button clicked.'); // Add this line for debugging\n      // Rest of your code\n    };\n\n    try {\n      // Send the prompt to the backend API for story generation\n      const response = await fetch('/api/generate-story', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        }) // Send the prompt as JSON data\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate story');\n      }\n\n      // Parse the response as JSON\n      const data = await response.json();\n\n      // Update the GeneratedStory component with the generated story\n      setGeneratedStory(data.story);\n    } catch (error) {\n      console.error('Error generating story:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PromptForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Your Story Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"In a city where everyone can fly...\",\n        value: prompt,\n        onChange: handlePromptChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), generatedStory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GeneratedStory\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedStory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptForm, \"pxUKhxGys0nTuL5C/cfP89uknQU=\");\n_c = PromptForm;\nexport default PromptForm;\nvar _c;\n$RefreshReg$(_c, \"PromptForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PromptForm","_s","prompt","setPrompt","generatedStory","setGeneratedStory","handlePromptChange","e","target","value","handleSubmit","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","story","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["B:/story-generator/Frontend/src/components/PromptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PromptForm() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [generatedStory, setGeneratedStory] = useState('');\r\n\r\n  const handlePromptChange = (e) => {\r\n    setPrompt(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('Submit button clicked.'); // Add this line for debugging\r\n        // Rest of your code\r\n      };\r\n      \r\n\r\n    try {\r\n      // Send the prompt to the backend API for story generation\r\n      const response = await fetch('/api/generate-story', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ prompt }), // Send the prompt as JSON data\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to generate story');\r\n      }\r\n\r\n      // Parse the response as JSON\r\n      const data = await response.json();\r\n\r\n      // Update the GeneratedStory component with the generated story\r\n      setGeneratedStory(data.story);\r\n    } catch (error) {\r\n      console.error('Error generating story:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"PromptForm\">\r\n      <h2>Enter Your Story Prompt</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          placeholder=\"In a city where everyone can fly...\"\r\n          value={prompt}\r\n          onChange={handlePromptChange}\r\n        />\r\n        <button type=\"submit\">Generate Story</button>\r\n      </form>\r\n      \r\n      \r\n      {/* Display the generated story */}\r\n      {generatedStory && (\r\n        <div className=\"GeneratedStory\">\r\n          <h3>Generated Story</h3>\r\n          <p>{generatedStory}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}